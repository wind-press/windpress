diff --git a/dist/index.js b/dist/index.js
index b270c88655806003cce1344ad0ea764e9bd0b7f2..2ffeec3360c74a643d61a33bc82c5d20785ef9c1 100644
--- a/dist/index.js
+++ b/dist/index.js
@@ -35,6 +35,18 @@ const esbuild_1 = __importDefault(require("./esbuild"));
 const options_1 = require("./options");
 const bundle_info_1 = require("./bundle-info");
 const transform_1 = require("./transform");
+
+
+// Use the same default target as Vite.
+// https://github.com/vitejs/vite/blob/v6.0.7/packages/vite/src/node/constants.ts#L70-L76
+const DEFAULT_VITE_TARGET = [
+    'es2020',
+    'edge88',
+    'firefox78',
+    'chrome87',
+    'safari14',
+  ]
+
 function topLevelAwait(options) {
     const resolvedOptions = {
         ...options_1.DEFAULT_OPTIONS,
@@ -63,21 +75,23 @@ function topLevelAwait(options) {
                 isWorkerIifeRequested = true;
             }
         },
-        configResolved(config) {
+        config(config, env) {
             var _a;
-            if (config.command === "build") {
-                if (config.isWorker) {
+            if (env.command === "build") {
+                if (config.worker) {
                     isWorker = true;
                 }
                 // By default Vite transforms code with esbuild with target for a browser list with ES modules support
                 // This cause esbuild to throw an exception when there're top-level awaits in code
                 // Let's backup the original target and override the esbuild target with "esnext", which allows TLAs
-                buildTarget = config.build.target;
+                // If the user doesn't specify a target explicitly, `config.build.target` will be undefined and we'll 
+                // use the default Vite target.
+                buildTarget = config.build.target ?? DEFAULT_VITE_TARGET;
                 config.build.target = "esnext";
                 minify = !!config.build.minify;
                 assetsDir = config.build.assetsDir;
             }
-            if (config.command === "serve") {
+            if (env.command === "serve") {
                 // Fix errors in NPM packages which are getting pre-processed in development build
                 if ((_a = config.optimizeDeps) === null || _a === void 0 ? void 0 : _a.esbuildOptions) {
                     config.optimizeDeps.esbuildOptions.target = "esnext";
